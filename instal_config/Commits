[< К содержанию](./README.md)
# Коммиты

Работа с Git предполагает понимание коммитов.   
Команда *`git commit`* откроет текстовый редактор для ввода сообщения коммита. Также эта команда принимает несколько аргументов:

`-m` позволяет написать сообщение вместе с командой, не открывая редактор.  
 Например *`git commit -m "fix bug"`*;
`-a` переносит все отслеживаемые файлы в область подготовленных файлов и включает их в коммит (позволяет пропустить `git add` перед коммитом);  

`--amend` заменяет последний коммит новым изменённым коммитом, что бывает полезно, если вы неправильно набрали сообщение последнего коммита или забыли включить в него какие-то файлы.

Советы для эффективного введения в Git:

* Коммитьте как можно чаще.
* Одно изменение — один коммит: не помещайте все не связанные между собой изменения в один коммит, разделите их, чтобы было проще откатиться.
* Формат сообщений: заголовок должен быть в повелительном наклонении, меньше 50 символов в длину и должен логически дополнять фразу this commit will ___(this commit will fix bugs — этот коммит исправит баги).  
* Сообщение должно пояснять, почему был сделан коммит, а сам коммит показывает, что изменилось.* Если у вас много незначительных изменений, хорошим тоном считается делать небольшие коммиты при разработке, а при добавлении в большой репозиторий объединять их в один коммит.  
  
  Пример:
  Если долго не коммитить, то будет не удобно делать "откат", т.к. файлы закоммичены одной пачкой.  

  ![Картинка]()

  # История коммитов в Git  

Коммиты хранят состояние файловой системы в определённый момент времени и указатели на предыдущие коммиты.   
Каждый коммит содержит уникальную контрольную сумму — идентификатор, который Git использует, чтобы ссылаться на коммит.   
Чтобы отслеживать историю, `Git` хранит указатель `HEAD`, который указывает на первый коммит (мы следуем по цепочке коммитов в обратном порядке, чтобы попасть к предыдущим коммитам).

Мы можем ссылаться на коммит либо через его контрольную сумму, либо через его позицию относительно `HEAD`, например *`HEAD~4`* ссылается на коммит, который находится *`4`* коммитами ранее `HEAD`. 
